// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package inject

import (
	"context"
	"github.com/google/wire"
	"github.com/y-yu/kindle-clock-go/domain"
	"github.com/y-yu/kindle-clock-go/domain/repository"
	"github.com/y-yu/kindle-clock-go/domain/usecase"
	"github.com/y-yu/kindle-clock-go/infra/api"
	"github.com/y-yu/kindle-clock-go/infra/cache"
	"github.com/y-yu/kindle-clock-go/presenter/clock"
	"github.com/y-yu/kindle-clock-go/presenter/room"
	repository2 "github.com/y-yu/kindle-clock-go/repository"
	usecase2 "github.com/y-yu/kindle-clock-go/usecase"
)

// Injectors from wire.go:

func AwairRepository(ctx context.Context) repository.AwairRepository {
	awairAPIClient := api.NewAwairAPIClient(ctx)
	cacheClient := cache.NewAwairCacheClient(ctx)
	systemClock := domain.NewSystemClock()
	awairRepository := repository2.NewAwairRepository(ctx, awairAPIClient, cacheClient, systemClock)
	return awairRepository
}

func NatureRemoRepository(ctx context.Context) repository.NatureRemoRepository {
	natureRemoAPIClient := api.NewNatureRemoAPIClient(ctx)
	natureRemoRepository := repository2.NewNatureRemoRepository(natureRemoAPIClient)
	return natureRemoRepository
}

func SwitchBotRepository(ctx context.Context) repository.SwitchBotRepository {
	switchBotAPIClient := api.NewSwitchBotAPIClient(ctx)
	cacheClient := cache.NewSwitchBotCacheClient(ctx)
	systemClock := domain.NewSystemClock()
	switchBotRepository := repository2.NewSwitchBotRepository(ctx, switchBotAPIClient, cacheClient, systemClock)
	return switchBotRepository
}

func OpenWeatherMapRepository(ctx context.Context) repository.OpenWeatherMapRepository {
	openWeatherMapAPIClient := api.NewOpenWeatherMapAPIClient(ctx)
	openWeatherMapRepository := repository2.NewOpenWeatherMapRepository(openWeatherMapAPIClient)
	return openWeatherMapRepository
}

func GetRoomInfoUsecase(ctx context.Context) usecase.GetRoomInfoUsecase {
	natureRemoAPIClient := api.NewNatureRemoAPIClient(ctx)
	natureRemoRepository := repository2.NewNatureRemoRepository(natureRemoAPIClient)
	switchBotAPIClient := api.NewSwitchBotAPIClient(ctx)
	cacheClient := cache.NewSwitchBotCacheClient(ctx)
	systemClock := domain.NewSystemClock()
	switchBotRepository := repository2.NewSwitchBotRepository(ctx, switchBotAPIClient, cacheClient, systemClock)
	awairAPIClient := api.NewAwairAPIClient(ctx)
	domainCacheClient := cache.NewAwairCacheClient(ctx)
	awairRepository := repository2.NewAwairRepository(ctx, awairAPIClient, domainCacheClient, systemClock)
	openWeatherMapAPIClient := api.NewOpenWeatherMapAPIClient(ctx)
	openWeatherMapRepository := repository2.NewOpenWeatherMapRepository(openWeatherMapAPIClient)
	getRoomInfoUsecase := usecase2.NewGetRoomInfoUsecase(natureRemoRepository, switchBotRepository, awairRepository, openWeatherMapRepository)
	return getRoomInfoUsecase
}

func RoomInfoHandler(ctx context.Context) *room.RoomInfoHandler {
	natureRemoAPIClient := api.NewNatureRemoAPIClient(ctx)
	natureRemoRepository := repository2.NewNatureRemoRepository(natureRemoAPIClient)
	switchBotAPIClient := api.NewSwitchBotAPIClient(ctx)
	cacheClient := cache.NewSwitchBotCacheClient(ctx)
	systemClock := domain.NewSystemClock()
	switchBotRepository := repository2.NewSwitchBotRepository(ctx, switchBotAPIClient, cacheClient, systemClock)
	awairAPIClient := api.NewAwairAPIClient(ctx)
	domainCacheClient := cache.NewAwairCacheClient(ctx)
	awairRepository := repository2.NewAwairRepository(ctx, awairAPIClient, domainCacheClient, systemClock)
	openWeatherMapAPIClient := api.NewOpenWeatherMapAPIClient(ctx)
	openWeatherMapRepository := repository2.NewOpenWeatherMapRepository(openWeatherMapAPIClient)
	getRoomInfoUsecase := usecase2.NewGetRoomInfoUsecase(natureRemoRepository, switchBotRepository, awairRepository, openWeatherMapRepository)
	roomInfoHandler := room.NewRoomInfoHandler(ctx, getRoomInfoUsecase, systemClock)
	return roomInfoHandler
}

func ClockHandler(ctx context.Context) *clock.ClockHandler {
	systemClock := domain.NewSystemClock()
	clockHandler := clock.NewClockHandler(systemClock)
	return clockHandler
}

// wire.go:

var binding = wire.NewSet(domain.NewSystemClock, api.NewAwairAPIClient, api.NewNatureRemoAPIClient, api.NewSwitchBotAPIClient, api.NewOpenWeatherMapAPIClient, cache.NewAwairCacheClient, cache.NewSwitchBotCacheClient, repository2.NewAwairRepository, repository2.NewNatureRemoRepository, repository2.NewSwitchBotRepository, repository2.NewOpenWeatherMapRepository, usecase2.NewGetRoomInfoUsecase, room.NewRoomInfoHandler, clock.NewClockHandler, wire.Bind(
	new(domain.Clock),
	new(*domain.SystemClock),
),
)
